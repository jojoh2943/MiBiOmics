library(shiny)
runGitHub("MiBiOmics", "jojoh2943")
install_packages <- c("devtools", "dplyr", "stringr", "RColorBrewer",
"grid")
git_packages <- c("HiveR")
if (length(setdiff(install_packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(install_packages, rownames(installed.packages())))
}
install.packages("git2r")
if (length(setdiff(install_packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(install_packages, rownames(installed.packages())))
}
if (length(setdiff(install_packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(install_packages, rownames(installed.packages())))
}
install.packages("HiveR")
source("http://bioconductor.org/biocLite.R")
biocLite("rgl")
install_packages <- c("devtools", "dplyr", "stringr", "RColorBrewer",
"grid")
git_packages <- c("HiveR")
if (length(setdiff(install_packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(install_packages, rownames(installed.packages())))
}
library(rgl)
install.packages("HiveR")
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("rstudio/r2d3")
remotes::install_github("rstudio/r2d3")
install_github("rstudio/r2d3")
install_github("rstudio/r2d3")
install_github("rstudio/r2d3")
devtools::install_github("rstudio/r2d3")
remotes::install_github("rstudio/r2d3")
getOption("unzip")
Sys.getenv("TAR")
options(unzip = "/opt/conda/bin/unzip")
Sys.setenv(TAR = "/bin/tar")
devtools
devtools::install_github("rstudio/r2d3")
library(r2d3)
?r2d3
#### LIBRARY UPLOAD ####
#library("devtools")
#devtools::install_github("rstudio/r2d3")
library(r2d3)
bars <- c(10, 20, 30)
bioconductor_packages <- c("GO.db", "preprocessCore", "impute",
"sva", "metagenomeSeq", "omicade4",
"threejs")
install_packages <- c("shiny", "matrixStats", "Hmisc",
"splines", "foreach", "doParallel",
"fastcluster", "dynamicTreeCut", "survival",
"WGCNA", "flexdashboard", "plotly",
"shinythemes", "ggplot2",
"ggrepel", "ggdendro", "ggthemes",
"dendextend", "pheatmap", "reshape2",
"gridExtra", "RColorBrewer", "vegan",
"DT", "shinyjs", "cowplot",
"visNetwork", "GGally", "sna",
"pls", "BiocManager", "iheatmapr",
"rmarkdown", "plotly", "ade4",
"igraph", "network", "plotly",
"compositions")
if (length(setdiff(bioconductor_packages, rownames(installed.packages()))) > 0) {
source("https://bioconductor.org/biocLite.R")
biocLite(setdiff(bioconductor_packages, rownames(installed.packages())), suppressUpdates = TRUE)
}
if (length(setdiff(install_packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(install_packages, rownames(installed.packages())))
}
#define MAX_NUM_DLLS 10000
library("flexdashboard")
library("metagenomeSeq")
library("shiny")
#library("V8")
library("shinythemes")
library("WGCNA")
library("ggplot2")
library("ggdendro")
library("ggrepel")
library('dendextend')
library("ggthemes")
library("pheatmap")
library("reshape2")
library("gridExtra")
library("RColorBrewer")
library("dynamicTreeCut")
library("omicade4")
library("ade4")
library("data.table")
library("vegan")
library("tools")
library("compositions")
library("DT")
library("plotly")
library("iheatmapr")
library("threejs")
library("shinyjs")
library("cowplot")
library("igraph")
library("visNetwork")
library("GGally")
library("network")
library("rmarkdown")
library("pls")
library("sva") #Batch correction
library("plotly")
shiny::runApp('MiBiOmics')
runApp('MiBiOmics')
library("DT")
runApp('MiBiOmics')
install.packages("shiny")
library(shiny)
runApp('MiBiOmics')
library(shiny)
library(shinyjs)
library(shinythemes)
shiny::runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
shiny::runApp('MiBiOmics')
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
shiny::runApp('MiBiOmics')
runApp()
runApp()
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
runApp('MiBiOmics')
