#   data = Enterorhabdus_data,
#   x = Condition,
#   y = Enterorhabdus,
#   type = "p",
#   var.equal = TRUE,
#   title = "Enterorhabdus abundance in Adherent JEJum \n between control and supplemented animal",
#   pairwise.comparisons = TRUE,
#   pairwise.display = "s",
#   p.adjust.method = "none"
# )
#
# MouseGutMetagenome_data <- data.frame("MouseGutMetagenome" = t(JEJ_CEI_filt["mouse gut metagenome",]), "Condition" = substr(colnames(JEJ_CEI_filt), 1, 2))
# #Lactobacillus_data$Parasutterella <- Lactobacillus_data$Parasutterella
#
# ggstatsplot::ggbetweenstats(
#   data = MouseGutMetagenome_data,
#   x = Condition,
#   y = mouse.gut.metagenome,
#   type = "p",
#   var.equal = TRUE,
#   title = "Mouse gut metagenome abundance in Adherent JEJum \n between control and supplemented animal",
#   pairwise.comparisons = TRUE,
#   pairwise.display = "s",
#   p.adjust.method = "none"
# )
#### JEJ LUM ####
condCol <- "CONDITION"
formulaChar<-paste0("~",condCol)
annot_JEJ <- annot[which(rownames(annot) %in% colnames(JEJ_LUM_filt)),]
annot_JEJ <- annot_JEJ[order(rownames(annot_JEJ)),]
annot_JEJ$CONDITION <- as.factor(as.character(annot_JEJ$CONDITION))
dds <- DESeqDataSetFromMatrix(countData = as.data.frame(JEJ_LUM_filt),
colData = annot_JEJ,
design = formula(formulaChar))
geoMeans = apply(counts(dds), 1, gm_mean)
dds = estimateSizeFactors(dds, geoMeans =geoMeans)
dds <- DESeq(dds, fitType = "local")
# Differential abundance between conditions
conds<-levels(annot_JEJ[,condCol])
compMatrix<-combn(conds,2)
comps<-apply(compMatrix,2,function(x)paste0(x[1],"_",x[2]))
colnames(compMatrix)<-comps
res<-list()
sampleByComp<-list()
for (comp in comps){
cond1 <- compMatrix[1,comp]
cond2<-compMatrix[2,comp]
res[[comp]]<-results(dds, contrast=c(condCol,cond1,cond2), independentFiltering = TRUE,alpha = 0.05)
res[[comp]]$meanInComp<-rowMeans(JEJ_LUM_filt[,annot_JEJ[,condCol]%in%compMatrix[,comp]])
}
res$CT_LT[which(res$CT_LT$padj < 0.05),]
res_JEJ_LUM <- res$CT_LT
#gathering each results in a dataframe
DE<-list()
for(comp in comps){
DE[[comp]]<-data.frame(res[[comp]])
rownames(DE[[comp]])<-rownames(JEJ_LUM_filt)
}
plotVolcano(DE$CT_LT, FCCutoff = 1.5, textSize = 4, main = "Differentially Abundant Genus between Control and Supplemented Mice in the luminal content of the JEJum")
# Lactobacillus_data <- data.frame("Lactobacillus" = t(JEJ_LUM_filt["Lactobacillus",]), "Condition" = substr(colnames(JEJ_LUM_filt), 1, 2))
# #Lactobacillus_data$Lactobacillus <- Lactobacillus_data$Lactobacillus
# ggstatsplot::ggbetweenstats(
#   data = Lactobacillus_data,
#   x = Condition,
#   y = Lactobacillus,
#   type = "np",
#   var.equal = TRUE,
#   title = "Lactobacillus abundance in Luminal JEJum \n between control and stressed animal",
#   pairwise.comparisons = TRUE,
#   pairwise.display = "s",
#   p.adjust.method = "none"
# )
#### JEJ ####
JEJ_Table <- cbind(JEJ_CEI_OTUTable, JEJ_LUM_OTUTable)
JEJ_Table_Filt <- filtr_prev(JEJ_Table, 6, samples_are_rows = FALSE, percentage = FALSE)
JEJ_annot <- annot[colnames(JEJ_Table_Filt),]
condCol <- "CONDITION"
formulaChar<-paste0("~",condCol)
JEJ_annot$CONDITION <- as.factor(as.character(JEJ_annot$CONDITION))
dds <- DESeqDataSetFromMatrix(countData = as.data.frame(JEJ_Table_Filt),
colData = JEJ_annot,
design = formula(formulaChar))
geoMeans = apply(counts(dds), 1, gm_mean)
dds = estimateSizeFactors(dds, geoMeans =geoMeans)
dds <- DESeq(dds, fitType = "local")
# Differential abundance between conditions
conds<-levels(JEJ_annot[,condCol])
compMatrix<-combn(conds,2)
comps<-apply(compMatrix,2,function(x)paste0(x[1],"_",x[2]))
colnames(compMatrix)<-comps
res<-list()
sampleByComp<-list()
for (comp in comps){
cond1 <- compMatrix[1,comp]
cond2<-compMatrix[2,comp]
res[[comp]]<-results(dds, contrast=c(condCol,cond1,cond2), independentFiltering = TRUE,alpha = 0.05)
res[[comp]]$meanInComp<-rowMeans(JEJ_Table_Filt[,JEJ_annot[,condCol]%in%compMatrix[,comp]])
}
res$CT_LT[which(res$CT_LT$padj < 0.05),]
res_JEJ <- res$CT_LT
#gathering each results in a dataframe
DE<-list()
for(comp in comps){
DE[[comp]]<-data.frame(res[[comp]])
rownames(DE[[comp]])<-rownames(JEJ_Table_Filt)
}
plotVolcano(DE$CT_LT, FCCutoff = 1.5, textSize = 4, main = "Differentially Abundant Genus between Control and Supplemented Mice in the JEJum")
# Bifidobacterium_data <- data.frame("Bifidobacterium" = t(JEJ_Table_Filt["Bifidobacterium",]), "Condition" = substr(colnames(JEJ_Table_Filt), 1, 2))
# #Lactobacillus_data$Parasutterella <- Lactobacillus_data$Parasutterella
#
# ggstatsplot::ggbetweenstats(
#   data = Bifidobacterium_data,
#   x = Condition,
#   y = Bifidobacterium,
#   type = "p",
#   var.equal = TRUE,
#   title = "Bifidobacterium abundance in JEJum \n between control and supplemented animal",
#   pairwise.comparisons = TRUE,
#   pairwise.display = "s",
#   p.adjust.method = "none"
# )
plotVolcano(DE$CT_LT, FCCutoff = 1.5, textSize = 4, main = "Differentially Abundant Genus between Control and Supplemented \n Mice in the adherent content of the Ileum")
#### ILE CEI ####
condCol <- "CONDITION"
formulaChar<-paste0("~",condCol)
annot_ILE <- annot[which(rownames(annot) %in% colnames(ILE_CEI_filt)),]
annot_ILE <- annot_ILE[order(rownames(annot_ILE)),]
annot_ILE$CONDITION <- as.factor(as.character(annot_ILE$CONDITION))
dds <- DESeqDataSetFromMatrix(countData = as.data.frame(ILE_CEI_filt),
colData = annot_ILE,
design = formula(formulaChar))
geoMeans = apply(counts(dds), 1, gm_mean)
dds = estimateSizeFactors(dds, geoMeans =geoMeans)
dds <- DESeq(dds, fitType = "local")
# Differential abundance between conditions
conds<-levels(annot_ILE[,condCol])
compMatrix<-combn(conds,2)
comps<-apply(compMatrix,2,function(x)paste0(x[1],"_",x[2]))
colnames(compMatrix)<-comps
res<-list()
sampleByComp<-list()
for (comp in comps){
cond1 <- compMatrix[1,comp]
cond2<-compMatrix[2,comp]
res[[comp]]<-results(dds, contrast=c(condCol,cond1,cond2), independentFiltering = TRUE,alpha = 0.05)
res[[comp]]$meanInComp<-rowMeans(ILE_CEI_filt[,annot_ILE[,condCol]%in%compMatrix[,comp]])
}
res$CT_LT[which(res$CT_LT$padj < 0.05),]
res_ILE_CEI <- res$CT_LT
#gathering each results in a dataframe
DE<-list()
for(comp in comps){
DE[[comp]]<-data.frame(res[[comp]])
rownames(DE[[comp]])<-rownames(ILE_CEI_filt)
}
plotVolcano(DE$CT_LT, FCCutoff = 1.5, textSize = 4, main = "Differentially Abundant Genus between Control and Supplemented \n Mice in the adherent content of the Ileum")
shiny::runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
shiny::runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp_cart_metadata_28080f39e6.tsv", sep = "\t", header = TRUE, row.names = 1)
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp_cart_metadata_28080f39e6.tsv", sep = "\t", header = TRUE)
name_ileum <- metadata[which(metadata$sample_body_site == "ileum"),]
name_ileum <- name_ileum$subject_id
name_ileum
metadata_filtered <- metadata[which(metadata$subject_id %in% name_ileum),]
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp_cart_metadata_28080f39e6.tsv", sep = "\t", header = TRUE)
name_ileum <- metadata[which(metadata$sample_body_site == "ileum"),]
name_ileum <- name_ileum$subject_id
metadata_filtered <- metadata[which(metadata$subject_id %in% name_ileum),]
metadata_blood_sample <- metadata_filtered[which(metadata_filtered$sample_body_site == "blood_sample"),]
View(metadata_filtered)
metadata_blood_cell <- metadata_filtered[which(metadata_filtered$sample_body_site == "blood cell"),]
metadata_blood_cell <- metadata_blood_cell[which(metadata_blood_cell$visit_number == 3),]
View(metadata_blood_sample)
View(metadata_blood_cell)
metadata_feces <- metadata_feces[which(metadata_feces$subject_id %in% name_ileum),]
metadata_feces <- metadata_filtered[which(metadata_filtered$sample_body_site == "feces"),]
metadata_feces$visit_number
min(metadata_feces$visit_number)
metadata_feces <- metadata_feces[which(metadata_feces$visit_number == 4),]
length(name_ileum)
length(unique(metadata_feces$sample_id))
name_feces <- unique(metadata_feces$sample_id)
name_blood_cell <- unique(metadata_blood_cell$sample_id)
length(name_blood_cell)
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp_cart_metadata_28080f39e6.tsv", sep = "\t", header = TRUE)
metadata_ileum <- metadata[which(metadata$sample_body_site == "ileum"),]
name_ileum <- metadata_ileum$subject_id
metadata_filtered <- metadata[which(metadata$subject_id %in% name_ileum),]
metadata_blood_cell <- metadata_filtered[which(metadata_filtered$sample_body_site == "blood cell"),]
metadata_blood_cell <- metadata_blood_cell[which(metadata_blood_cell$visit_number == 3),]
metadata_feces <- metadata_filtered[which(metadata_filtered$sample_body_site == "feces"),]
metadata_feces <- metadata_feces[which(metadata_feces$visit_number == 4),]
name_feces <- unique(metadata_feces$sample_id)
name_blood_cell <- unique(metadata_blood_cell$sample_id)
name_ileum <- unique(metadata_ileum$sample_id)
length(name_ileum)
intersection(name_ileum, name_blood_cell, name_feces)
intersect(name_ileum, name_blood_cell, name_feces)
intersect(name_ileum, intersect(name_blood_cell, name_feces))
intersect(metadata_ileum$subject_id, intersect(metadata_feces$subject_id, metadata_blood_cell$subject_id))
common_sample <- intersect(metadata_ileum$subject_id, intersect(metadata_feces$subject_id, metadata_blood_cell$subject_id))
metadata_filtered <- metadata[which(metadata$subject_id %in% common_sample),]
metadata_blood_cell <- metadata_filtered[which(metadata_filtered$sample_body_site == "blood cell"),]
metadata_blood_cell <- metadata_blood_cell[which(metadata_blood_cell$visit_number == 3),]
metadata_feces <- metadata_filtered[which(metadata_filtered$sample_body_site == "feces"),]
metadata_feces <- metadata_feces[which(metadata_feces$visit_number == 4),]
name_feces <- unique(metadata_feces$sample_id)
name_blood_cell <- unique(metadata_blood_cell$sample_id)
name_ileum <- unique(metadata_ileum$sample_id)
length(name_feces)
length(name_blood_cell)
length(name_ileum)
metadata_ileum <- metadata_ileum[which(metadata_ileum$subject_id %in% common_sample),]
name_ileum <- unique(metadata_ileum$sample_id)
name_ileum
metadata_ileum
unique(metadata_ileum$sample_id)
metadata_ileum <- metadata_ileum[which(metadata_ileum$subject_id %in% common_sample),]
unique(metadata_ileum$subject_id)
unique(metadata_ileum$sample_id)
unique(metadata_ileum$visit_number)
metadata_ileum <- metadata_ileum[which(metadata_ileum$visit_number == 1),]
name_ileum <- unique(metadata_ileum$sample_id)
name_ileum
common_name <- unique(metadata_ileum$subject_id)
common_name
metadata_filtered <- metadata[which(metadata$subject_id %in% common_name),]
metadata_blood_cell <- metadata_filtered[which(metadata_filtered$sample_body_site == "blood cell"),]
metadata_blood_cell <- metadata_blood_cell[which(metadata_blood_cell$visit_number == 3),]
metadata_feces <- metadata_filtered[which(metadata_filtered$sample_body_site == "feces"),]
metadata_feces <- metadata_feces[which(metadata_feces$visit_number == 4),]
name_feces <- unique(metadata_feces$sample_id)
name_blood_cell <- unique(metadata_blood_cell$sample_id)
name_feces
name_blood_cell
name_ileum
name_to_upload <- c(name_ileum, name_feces, name_blood_cell)
name_to_upload
name_ileum
name_to_upload <- c(as.character(name_ileum), as.character(name_feces), as.character(name_blood_cell))
name_to_upload
unique(name_to_upload)
write.csv(name_to_upload, "name_file_IBD.csv")
library(mixOmics)
install.package(mixKernel)
install.packages("mixKernel")
library(mixKernel)
data("TARAoceans")
TARAoceans$phychem
phychem <- TARAoceans$phychem
TARAoceans$pro.phylo
prophylo <- TARAoceans$pro.phylo
TARAoceans$taxonomy
taxTable <- TARAoceans$taxonomy
TARAoceans$pro.NOGs
proNOGS <- TARAoceans$pro.NOGs
prophylo
taxTable
?TARAoceans
data('breast.TCGA')
breast.TCGA$data.train$mirna
data('breast.TCGA')
mirna <- breast.TCGA$data.train$mirna
mrna <- breast.TCGA$data.train$mrna
protein <- breast.TCGA$data.train$protein
protein <- breast.TCGA$data.train$subtype
protein <- breast.TCGA$data.train$protein
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp2_metadata.csv", sep = ",", header = TRUE)
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp2_metadata.csv", sep = ",", header = TRUE)
metadata_day0 <- metadata[which(metadata$week_num == 0),]
metadata_day0 <- metadata[which(metadata$visit_num == 0),]
metadata_day0 <- metadata[which(metadata$visit_num == 1),]
metadata_ileum_day0 <- metadata_day0[which(metadata_day0$biopsy_location == "Ileum")]
metadata_ileum_day0 <- metadata_day0[which(metadata_day0$biopsy_location == "Ileum"),]
metadata_ileum_day0$data_type
unique(metadata_ileum_day0$data_type)
metadata_biopsy <- metadata_ileum_day0[which(metadata_ileum_day0$data_type == "biopsy_16S"),]
metadata_hostT <- metadata_ileum_day0[which(metadata_ileum_day0$data_type == "host_transcriptomics"),]
metadata_methylome <- metadata_ileum_day0[which(metadata_ileum_day0$data_type == "methylome"),]
length(unique(metadata_methylome$Participant.ID))
length(unique(metadata_biopsy$Participant.ID))
length(unique(metadata_hostT$Participant.ID))
Common_participants <- intersect(metadata_biopsy$Participant.ID, intersect(metadata_hostT$Participant.ID, metadata_methylome$Participant.ID))
metadata_hostT <- metadata_hostT[which(metadata_hostT$Participant.ID %in% Common_participants),]
metadata_methylome <- metadata_methylome[which(metadata_methylome$Participant.ID %in% Common_participants),]
metadata_biopsy <- metadata_biopsy[which(metadata_biopsy$Participant.ID %in% Common_participants),]
metadata_biopsy$External.ID
write.csv(metadata_biopsy, "C:/Users/Boulot/Documents/mibiomics/data_test/metadata_biopsy.csv")
write.csv(metadata_methylome, "C:/Users/Boulot/Documents/mibiomics/data_test/metadata_methylome.csv")
write.csv(metadata_methylome, "C:/Users/Boulot/Documents/mibiomics/data_test/metadata_methylome.csv")
write.csv(metadata_hostT, "C:/Users/Boulot/Documents/mibiomics/data_test/metadata_hostT.csv")
otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/taxonomic_profiles.tsv", sep = "\t", header = TRUE)
otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/taxonomic_profiles.tsv", sep = "\t", header = TRUE)
otu
otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/taxonomic_profiles.tsv", sep = "\t", header = TRUE, check.names = FALSE)
otu
# Create taxonomy table:
OTU.ID <- otu$`#OTU ID`
# Create taxonomy table:
OTU.ID <- as.character(otu$`#OTU ID`)
otu <- otu[, -`#OTU ID`]
otu <- otu[, -"#OTU ID"]
otu[:-1]
otu[,-1]
rownames(otu) <- OTU.ID
### Create taxonomy table:
taxonomy <- otu$taxonomy
strsplit(taxonomy, ";")
### Create taxonomy table:
taxonomy <- as.character(otu$taxonomy)
strsplit(taxonomy, ";")
?lapply
lapply(taxonomy, strsplit, split = ";")
vapply(taxonomy, strsplit, split = ";")
df.taxo <- as.data.frame(taxonomy)
sapply(taxonomy, strsplit, split = ";")
strsplit(taxonomy[1], ";")
a <- strsplit(taxonomy[1], ";")
a$1
a[[1]]$1
a[[1]]
str <- strsplit(taxonomy, ";")
Taxonomy.df <- data.frame(unlist(str))
Taxonomy.df
Taxonomy.df <- matrix(unlist(str), ncol = 6, byrow = TRUE)
Taxonomy.df
Taxonomy.df <- as.data.frame(Taxonomy.df)
colnames(Taxonomy.df) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus")
rownames(Taxonomy.df) <- OTU.ID
Taxonomy.df
substr(Taxonomy.df$Phylum, 3, nchar(Taxonomy.df$Phylum))
substr(Taxonomy.df$Phylum, 3, 6
)
nchar(Taxonomy.df$Phylum)
substr(Taxonomy.df$Phylum, 4, nchar(as.character(Taxonomy.df$Phylum)))
Taxonomy.df$Phylum <- substr(Taxonomy.df$Phylum, 4, nchar(as.character(Taxonomy.df$Phylum)))
substr(Taxonomy.df$Class, 4, nchar(as.character(Taxonomy.df$Class)))
Taxonomy.df$Class <- substr(Taxonomy.df$Class, 4, nchar(as.character(Taxonomy.df$Class)))
substr(Taxonomy.df$Order, 4, nchar(as.character(Taxonomy.df$Order)))
Taxonomy.df$Order <- substr(Taxonomy.df$Order, 4, nchar(as.character(Taxonomy.df$Order)))
substr(Taxonomy.df$Family, 4, nchar(as.character(Taxonomy.df$Family)))
Taxonomy.df$Family <- substr(Taxonomy.df$Family, 4, nchar(as.character(Taxonomy.df$Family)))
substr(Taxonomy.df$Genus, 4, nchar(as.character(Taxonomy.df$Genus)))
Taxonomy.df$Genus <- substr(Taxonomy.df$Genus, 4, nchar(as.character(Taxonomy.df$Genus)))
Taxonomy.df
write.csv(Taxonomy.df, "C:/Users/Boulot/Documents/mibiomics/data_test/taxTable.csv")
otu
otu <- otu[,-1] #☺ Remove for column
otu
otu <- otu[,-"taxonomy"] #☺ Remove for column
otu <- otu[,-ncol(otu)] #☺ Remove for column
otu
otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_biopsy.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
## OTUs
otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/taxonomic_profiles.tsv", sep = "\t", header = TRUE, check.names = FALSE)
OTU.ID <- as.character(otu$`#OTU ID`)
otu <- otu[,-1] #☺ Remove for column
rownames(otu) <- OTU.ID
### Create taxonomy table:
taxonomy <- as.character(otu$taxonomy)
otu <- otu[,-ncol(otu)] #☺ Remove for column
otu
metadata_otu <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_biopsy.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
metadata_otu
View(metadata_otu)
otu[,metadata_otu$External.ID]
metadata_otu$External.ID
as.character(metadata_otu$External.ID)
otu[,as.character(metadata_otu$External.ID)]
otu <- otu[, as.character(metadata_otu$External.ID)]
metadata_hostT <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_hostT.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
## transcriptomique
host_tx <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_tx_counts.tsv", sep = "\t", header = TRUE, check.names = FALSE)
## transcriptomique
host_tx <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_tx_counts.tsv", sep = "\t", header = TRUE, check.names = FALSE, row.names = 1)
View(host_tx)
View(metadata_hostT)
host_tx <- host_tx[,metadata_hostT$External.ID]
colnames(host_tx)
metadata_hostT$External.ID
## transcriptomique
host_tx <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_tx_counts.tsv", sep = "\t", header = TRUE, check.names = FALSE, row.names = 1)
host_tx <- host_tx[,as.character(metadata_hostT$External.ID)]
colnames(host_tx)
colnames(host_tx) <- metadata_hostT$Participant.ID
colnames(host_tx)
colnames(otu)
colnames(otu) <- metadata_otu$Participant.ID
write.csv(otu,  "C:/Users/Boulot/Documents/mibiomics/data_test/otuTable.csv")
write.csv(host_tx, "C:/Users/Boulot/Documents/mibiomics/data_test/host_tx.csv")
## Metabolomic
host_tx <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/iHMP_metabolomics.csv", sep = ",", header = TRUE, check.names = FALSE, row.names = 1)
## Metabolomic
metabo <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/iHMP_metabolomics.csv", sep = ",", header = TRUE, check.names = FALSE, row.names = 1)
host_tx <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_tx_counts.tsv", sep = "\t", header = TRUE, check.names = FALSE, row.names = 1)
metadata_hostT <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_hostT.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
host_tx <- host_tx[,as.character(metadata_hostT$External.ID)]
colnames(host_tx) <- metadata_hostT$Participant.ID
write.csv(host_tx, "C:/Users/Boulot/Documents/mibiomics/data_test/host_tx.csv")
## Metabolomic
metabo <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/iHMP_metabolomics.csv", sep = ",", header = TRUE, check.names = FALSE)
rownames(metabo)
metadata <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/hmp2_metadata.csv", sep = ",", header = TRUE)
metadata_metabo <- metadata[which(metadata$data_type == "metabolomics"),]
metadata_metabo_commonIleum <- metadata_metabo[which(metadata_metabo$Participant.ID %in% metadata_hostT$Participant.ID),]
metadata_metabo_commonIleum_visit1 <- metadata_metabo_commonIleum[which(metadata_metabo_commonIleum$visit_num =="4"),]
write.csv(metadata_metabo_commonIleum_visit1, "C:/Users/Boulot/Documents/mibiomics/data_test/metadata_metabo.csv")
metadata_metabo_commonIleum_visit1$External.ID
colnames(metabo)
#metadata_hostT <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_hostT.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
metabo_name <- metabo$Metabolite
metabo[, 8:ncol(metabo)]
colnames(metabo)[, 8:ncol(metabo)]
colnames(metabo[, 8:ncol(metabo)])
metabo <- colnames(metabo)[, 8:ncol(metabo)]
metabo <- metabo[, 8:ncol(metabo)]
metabo[, metadata_metabo_commonIleum_visit1$External.ID]
metabo <- metabo[, as.character(metadata_metabo_commonIleum_visit1$External.ID)]
rownames(metabo) <- metabo_name
## Metabolomic
metabo <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/iHMP_metabolomics.csv", sep = ",", header = TRUE, check.names = FALSE)
#metadata_hostT <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/metadata_hostT.csv", sep = ",", header = TRUE, row.names = 1, check.names = FALSE)
metabo_name <- paste(metabo$Metabolite, metabo$Compound, sep ="_")
metabo <- metabo[, 8:ncol(metabo)]
metabo <- metabo[, as.character(metadata_metabo_commonIleum_visit1$External.ID)]
rownames(metabo) <- metabo_name
metabo
rownames(metabo) <- metadata_metabo_commonIleum_visit1$Participant.ID
colnames(metabo) <- metadata_metabo_commonIleum_visit1$Participant.ID
write.csv(metabo, "C:/Users/Boulot/Documents/mibiomics/data_test/iHMP_metabolomics.csv")
write.csv(metabo, "C:/Users/Boulot/Documents/mibiomics/data_test/metabolomics.csv")
metabo
metabo[sample(rownames(metabo), size = 400),]
metabo_light1 <- metabo[sample(rownames(metabo), size = 400),]
metabo_light2 <- metabo[1:92,]
metabo_light <- rbind(metabo_light2, metabo_light1)
write.csv(metabo_light, "C:/Users/Boulot/Documents/mibiomics/data_test/metabolomicsLIGHT.csv")
host_tx[sample(rownames(host_tx), size =520),]
host_tx_light <- host_tx[sample(rownames(host_tx), size =520),]
write.csv(host_tx_light, "C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv")
shiny::runApp('Docker_MiBiOmics/MiBiOmics')
metadata[, c("sex", "consent_age", "Age.at.diagnosis", "Occupation", "Ileum", "Ileum.1", "Ileum.2", "Ileum.3", "Weight")]
metadata[, c("sex", "consent_age", "Age.at.diagnosis", "Occupation", "Ileum", "Ileum.1", "Ileum.2", "Ileum.3", "BMI")]
metadata[, c("sex", "consent_age", "Age.at.diagnosis", "Occupation", "Ileum", "Ileum.1", "Ileum.2", "Ileum.3", "diagnosis")]
metadata_of_interest <- metadata[, c("sex", "consent_age", "Age.at.diagnosis", "Occupation", "Ileum", "Ileum.1", "Ileum.2", "Ileum.3", "diagnosis")]
rownames(metadata_of_interest) <- metadata$Participant.ID
metadata_of_interest <- metadata_hostT[, c("sex", "consent_age", "Age.at.diagnosis", "Occupation", "Ileum", "Ileum.1", "Ileum.2", "Ileum.3", "diagnosis")]
rownames(metadata_of_interest) <- metadata_hostT$Participant.ID
write.csv(metadataLIGHT, "C:/Users/Boulot/Documents/mibiomics/data_test/metadataLIGHT.csv")
write.csv(metadata_of_interest, "C:/Users/Boulot/Documents/mibiomics/data_test/metadataLIGHT.csv")
runApp('Docker_MiBiOmics/MiBiOmics')
write.csv(metadata_of_interest, "C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv")
write.csv(metadata_of_interest, "C:/Users/Boulot/Documents/mibiomics/data_test/metadataLIGHT.csv")
read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv", sep = ",", header = TRUE, row.names = 1)
write.csv(host_tx_light, "C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv")
write.csv(host_tx_light, "C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv")
read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv", sep = ",", header = TRUE, row.names = 1)
a <- read.csv("C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT.csv", sep = ",", header = TRUE, row.names = 1)
rowSums(a)
rowSums(a) == 0
any(rowSums(a) == 0)
metadata[which(metadata$Participant.ID %in% rownames(metadata_of_interest)),]
some_data <- metadata[which(metadata$Participant.ID %in% rownames(metadata_of_interest)),]
unique(some_data$Paticipant.ID)
some_data$Participant.ID
unique(as.character(some_data$Participant.ID))
some_data[!is.na(some_data$BMI),]
some_data_filtered <- some_data[!is.na(some_data$BMI),]
some_data_filtered$visit_num
some_data_filtered[,c("Participant.ID", "site_name")]
some_data_filtered[,c("Participant.ID", "site_name", "data_type")]
some_data_filtered[,c("Participant.ID", "BMI", "CRP..mg.L.", "ESR..mm.hr.")]
unique(some_data_filtered[,c("Participant.ID", "BMI")])
BMI_patient <- unique(some_data_filtered[,c("Participant.ID", "BMI")])
rownames(BMI_patient) <- BMI_patient$Participant.ID
BMI_patient[order(rownames(metadata_of_interest)),]
View(metadata_of_interest)
BMI_patient[rownames(metadata_of_interest), "BMI"]
metadata_of_interest$BMI <- BMI_patient[rownames(metadata_of_interest), "BMI"]
BMI_patient
write.csv(metadata_of_interest, "C:/Users/Boulot/Documents/mibiomics/data_test/metadataLIGHT.csv")
host_tw_ordered <- host_tx[order(rowSums(host_tx)),]
rowSums(host_tw_ordered)
tail(rowSums(host_tw_ordered))
host_tw_ordered <- host_tx[order(rowSums(host_tx), decreasing = TRUE),]
rowSums(host_tw_ordered)
host_tw_abundant <- host_tw_ordered[1:720,]
write.csv(host_tw_abundant, "C:/Users/Boulot/Documents/mibiomics/data_test/host_txLIGHT_ABUNDANT.csv")
metabo_light3 <- metabo[order(rowSums(metabo), decreasing = TRUE),]
rowSums(metabo_light3)
metabo_light3 <- metabo_light3[1:700,]
metabo_light_abundant <- rbind(metabo_light2, metabo_light3)
metabo_light_abundant
runApp('Docker_MiBiOmics/MiBiOmics')
write.csv(metabo_light_abundant, "C:/Users/Boulot/Documents/mibiomics/data_test/metabolomicsLIGHT_ABUNDANT.csv")
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
shiny::runApp('Docker_MiBiOmics/MiBiOmics')
runApp('Docker_MiBiOmics/MiBiOmics')
